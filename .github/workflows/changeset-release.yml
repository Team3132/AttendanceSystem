name: Release
on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  REGISTRY: ghcr.io
  IMAGE: ghcr.io/team3132/attendancesystem

permissions: 
  packages: write
  id-token: write
  contents: write
  pull-requests: write

jobs:
  
  release:
    name: Release Changeset
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        name: Setup Bun

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Install Dependancies
        run: bun install --frozen-lockfile
      - name: Build
        run: bun run build

      - name: Check Types
        run: bun typecheck

      - name: Lint & Format Packages
        run: bun check --reporter=github

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        with:
          # this npm script triggers `changeset publish`
          publish: bun changeset tag
          createGithubReleases: true
  publish-docker:
    name: Publish Docker Images
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.published == 'true'
    strategy:
      fail-fast: true
      matrix:
        package: ${{ fromJson(needs.release.outputs.publishedPackages) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}-${{ matrix.package.name }}
          tags: |
            # use custom value instead of git tag
            type=semver,pattern={{version}},value=${{ matrix.package.version }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          build-args: |
            VITE_VERSION=${{ matrix.package.version }}
          tags: ${{ steps.meta.outputs.tags }}
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/team3132/attendancesystem-${{ matrix.package.name }}:latest